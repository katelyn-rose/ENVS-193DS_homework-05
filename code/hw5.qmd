---
title: "Homework 5"
author: "Katie Miller"
format:
  html:
    toc: true
    toc-location: left
    code-fold: true
    theme: yeti
execute:
  message: false
  warning: false
editor: visual
---

# Introduction

### Introduction Code:

```{r packages}
# loading in necessary packages
library(tidyverse)
library(here)
library(janitor)
library(ggeffects)
library(performance)
library(naniar)
library(flextable) 
library(car)
library(broom)
library(corrplot)
library(AICcmodavg)
library(GGally)
```

```{r read-data}
# reading in the data, filtering for clarity and relevancy
plant <- read_csv(here("data", "knb-lter-hfr.109.18","hf109-01-sarracenia.csv")) %>% 
  # make column names cleaner
  clean_names() %>% 
  # select columns of interest 
  select(totmass, species, feedlevel, sla, chlorophyll, amass, num_lvs, num_phylls)
```

# Methods


\t Ellison and Farnsworth (2021) conducted a manipulative feeding experiment with multiple species of Sarracenia to examine the effects of varying nutrient availability on multiple physiological factors. The resulting data was wrangled and uploaded to RStudio. We initially filtered the dataset to extract the variables most relevant to answering our research question: how do Sarracenia characteristics predict biomass? After initial wrangling and filtering, we began our analysis by creating a visualization of the missing data in our entire data subset (Figure 1). This figure brings attention to the missing values for several variables, however, the missingness is relatively low. In order to examine the relationships between the numerical variables in our dataset, we calculated Pearson's r and visually represented the correlation using a correlation plot (Figure 2). This correlation plot allows us to visually represent the possible correlations between our variables. To further understand the relationships between our variables, we created a pair plot of each variable compared against the others (Figure 3). 
\t To determine how species and physiological characters predict biomass, we fit multiple linear models. We started by creating a full model using the entire subset of variables of interest, with total mass ($g$) as the response variable, and the predictor variables being the species of Sarracenia, feed level ($g$), specific leaf area ($cm^2/g$), chlorophyll a + b content ($mg/g$), photosynthetic rate ($nmol CO2 * g^-1 * s^-1$), number of phyllodes, and number of pitchers and phyllodes. The null model does not contain our predictor variables, only the response variable. We tested our full model for normality using Shapiro-Wilk test and for heteroscedasticity using Breusch-Pagan test. Unfortunately, the full model was non-normal & heteroscedastic, therefore did not meet the assumptions for linear regression (Figure 4). To combat this, we performed a mathematical transformation by taking the log of the response variable. The resulting log transformed model did meet the visual and statistical assumption checks for linear regression by having normally distributed residuals and homoscedastic variance (Figure 5). Using this log model, we set out to determine which predictor variables best explain the response in total mass. 
\t We found that species alone is a good predictor of total mass. Figure 4: model 1, species (not enough)

Assumption

Figure 5: model 2,

To create the second model, we removed the predictor variable with the lowest correlation with biomass, which was the photosynthetic rate. Looking at a model with relatively many predictor variables Assumptions

Figure 6: model 3, goldilocks

Model construction with visual and statistical assumption checks for three additional models with justification (i.e. why did you choose those predictor variables?) (justification: 1-3 sentences per model)

j.  We evaluated multicolinearity by calculating generalized variance inflation factor and determined that there are no related predictors which inflate the data. Variance inflation factor check for the full model with accompanying discussion (discussion: 1-3 sentences)

k.  Model comparison using the null model, full model, and additional models from part 7g

### Methods Figures & Code


```{r fig-1}
# Figure 1: visualize missing data
gg_miss_var(plant) 

```
**Figure 1. Visualizing variables with missing data in the Sarracinia data subset.** The variables chlorophyll, amass, sla, num_phylls, and num_lvs all have missing data, however, the missingness is relatively low.

```{r subset}
# creating a subset of the data dropping NA values shown in Figure 1
plant_subset <- plant %>%  
  drop_na(sla, chlorophyll, amass, num_phylls, num_lvs)
```

```{r fig-2}
# Figure 2: correlation plot
# calculate Pearson's r for numerical values only
plant_cor <- plant_subset %>% 
  select(feedlevel:num_phylls) %>% 
  cor(method = "pearson")
#create a correlation plot 
corrplot(plant_cor,
         #change shape of cells 
         method = "ellipse",
         addCoef.col = "black") 
```
**Figure 2. Plot of correlation between variables.** These values were calculated using Pearson's r.

```{r fig-3}
# Figure 3: "pair plot"
plant_subset %>% 
  select(species:num_phylls) %>% 
  ggpairs()
```
**Figure 3. Pair plot.** 


```{r full-model}
# Full and null models of filtered data
# null = no predictors
null <- lm(totmass ~ 1, data = plant_subset)
# full = response and all potential predictors 
full <- lm(totmass ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)
```

```{r full-vis}
# Full model visual assumptions check
par(mfrow = c(2,2))
plot(full)
```
**Figure 4. Visual check of assumptions for the full model**

```{r full-stats}
# Full model stats assumptions check 
check_normality(full)
check_heteroscedasticity(full)
```

```{r log-transform}
# Log transformation of response variable for null and full models
null_log <- lm(log(totmass) ~ 1, data = plant_subset)
full_log <- lm(log(totmass) ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)

# Assumptions
# Log model visual assumptions check
par(mfrow = c(2,2))
plot(full_log, caption = "Table x. Visual check of assumptions for the log model")
```
**Figure 5. Visual check of assumptions for the log model**

```{r log-stats}
# Log model stats assumptions check 
check_normality(full_log)
check_heteroscedasticity(full_log)
```


```{r methods-code}
# Figure 4: model 1 
# species predicts biomass?
model1_log <- lm(log(totmass) ~ species, data = plant_subset)

# Assumptions
# model 1 visual assumptions check
par(mfrow = c(2,2))
plot(model1_log, caption = "Table x. Visual check of assumptions for the log model")

# model stats assumptions check 
check_normality(model1_log)
check_heteroscedasticity(model1_log)

# Figure 5: model 2

# Assumptions

# Figure 6: model 3
# species predicts biomass?
model3_log <- lm(log(totmass) ~ species + sla + feedlevel + chlorophyll + num_lvs, data = plant_subset)

par(mfrow = c(2,2))
plot(model3_log)

# model stats assumptions check 
check_normality(model3_log)
check_heteroscedasticity(model3_log)


# Variance Inflation Factor (VIF) to evaluate multicolinearity
car::vif(full_log, caption = "Table x.")

# Akaike Information Criterion (AIC)
#MuMIn::model.sel(full_log, null_log, model1_log, model2_log, model3_log)
```

# Results

Model 1 showing species alone can be a good predictor but is not the best because it excludes Conversely, Model 2 includes predictor variables with little correlation to the response which negatively effects the accuracy of the overall model. Model 3 is the best model because it is the simplest as determined by AIC Akaike Info Criterion (AIC) from Table x values show that Model 3 is the simplest model that explains the most variance. (species + sla + feedlevel + chlorophyll + num_lvs)

number of pitchers and phylodes use MuMIn::dredge() best: chl, fdl, num_lvs, sla Species:

We found the best predictor variable of total mass of a Sarracina plant to be the total number of pitchers and phyllodes it possesses. Biologically, this makes sense because the more pitchers and phyllodes would mean a larger plant, and therefore larger total biomass.

### Results Code

```{r}
summary(model3_log)
```

```{r}
model_pred <- ggpredict(model3_log, terms = "num_lvs", back.transform = TRUE)

model_pred
```

```{r}
plot(ggpredict(model3_log, terms = "num_lvs", back.transform = TRUE), add.data = TRUE)
```

# Bibliography
